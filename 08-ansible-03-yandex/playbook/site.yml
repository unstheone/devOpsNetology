---
- name: Install Clickhouse
  hosts: clickhouse
  remote_user: centos
  gather_facts: false
  tags: clickhouse

  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted

  tasks:
    - name: Install, configure, and start Clickhouse
      block:
        - name: Get clickhouse distrib
          block:
            - name: Get clickhouse distrib
              ansible.builtin.get_url:
                url: https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm
                dest: ./{{ item }}-{{ clickhouse_version }}.rpm
                mode: "0644"
              with_items: "{{ clickhouse_packages }}"
          rescue:
            - name: Get clickhouse distrib
              ansible.builtin.get_url:
                url: https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm
                dest: ./clickhouse-common-static-{{ clickhouse_version }}.rpm
                mode: "0644"
              with_items: "{{ clickhouse_packages }}"

        - name: Install clickhouse packages
          become: true
          ansible.builtin.yum:
            name:
              - clickhouse-common-static-{{ clickhouse_version }}.rpm
              - clickhouse-client-{{ clickhouse_version }}.rpm
              - clickhouse-server-{{ clickhouse_version }}.rpm
          notify: Start clickhouse service

        - name: Modify Clickhouse config.xml
          become: true
          ansible.builtin.replace:
            backup: true
            path: "/etc/clickhouse-server/config.xml"
            regexp: '^    <!-- <listen_host>0.0.0.0</listen_host> -->$'
            replace: '    <listen_host>0.0.0.0</listen_host>'
          notify: Start clickhouse service

        - name: Flush handlers
          ansible.builtin.meta: flush_handlers

        - name: Wait for clickhouse-server to become available
          ansible.builtin.pause:
            seconds: 30
            echo: false

        - name: Create database
          ansible.builtin.command: clickhouse-client --host clickhouse-01 --port 9000 -q 'create database logs;'
          register: create_db
          failed_when: create_db.rc != 0 and create_db.rc != 82
          changed_when: create_db.rc == 0

        - name: Create Clickhouse table
          ansible.builtin.command: clickhouse-client --host clickhouse-01 --port 9000 -q 'create table logs.{{ all_clickhouse_table }} (message String) ENGINE = MergeTree() ORDER BY tuple();'
          register: create_table
          failed_when: create_db.rc != 0 and create_db.rc != 82
          changed_when: create_table == 0

- name: Vector
  hosts: vector
  gather_facts: false
  remote_user: centos
  tags: vector

  handlers:
    - name: Start Vector service
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: false
        name: vector.service
        state: restarted

  tasks:
    - name: Install, configure, and start Vector
      block:
        - name: Create vector work directory
          ansible.builtin.file:
            path: "{{ vector_workdir }}"
            state: directory
            mode: "0755"

        - name: Get Vector distrib
          ansible.builtin.get_url:
            url: https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz
            dest: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz"
            mode: "0644"

        - name: Unzip Vector archive
          ansible.builtin.unarchive:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz"
            dest: "{{ vector_workdir }}"

        - name: Install Vector binary
          become: true
          ansible.builtin.copy:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_os_arch }}-unknown-linux-gnu/bin/vector"
            dest: /usr/bin/
            mode: "0755"
            owner: root
            group: root

        - name: Check Vector installation
          ansible.builtin.command: vector --version
          register: var_vector
          failed_when: var_vector.rc != 0
          changed_when: var_vector.rc == 0

        - name: Create Vector etc directory
          become: true
          ansible.builtin.file:
            path: "/etc/vector"
            state: directory
            mode: "0755"

        - name: Create Vector config vector.yaml
          become: true
          ansible.builtin.template:
            src: "templates/vector/vector.yaml.j2"
            dest: "/etc/vector/vector.yaml"
            mode: "0644"
            owner: root
            group: root

        - name: Create vector.service daemon
          become: true
          ansible.builtin.copy:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_os_arch }}-unknown-linux-gnu/etc/systemd/vector.service"
            dest: /lib/systemd/system/
            mode: "0644"
            owner: root
            group: root
          notify: Start Vector service

        - name: Modify Vector.service file ExecStart
          become: true
          ansible.builtin.replace:
            backup: true
            path: /lib/systemd/system/vector.service
            regexp: ^ExecStartPre=/usr/bin/vector validate$
            replace: ExecStartPre=/usr/bin/vector validate --config-yaml /etc/vector/vector.yaml
          notify: Start Vector service

        - name: Modify Vector.service file ExecStartPre
          become: true
          ansible.builtin.replace:
            backup: true
            path: /lib/systemd/system/vector.service
            regexp: ^ExecStart=/usr/bin/vector$
            replace: ExecStart=/usr/bin/vector --config-yaml /etc/vector/vector.yaml
          notify: Start Vector service

        - name: Create user vector
          become: true
          ansible.builtin.user:
            create_home: false
            name: "{{ vector_os_user }}"

        - name: Create Vector data_dir
          become: true
          ansible.builtin.file:
            path: "{{ vector_data_dir }}"
            state: directory
            mode: "0755"
            owner: "{{ vector_os_user }}"
            group: "{{ vector_os_group }}"

- name: Lighthouse
  hosts: lighthouse
  gather_facts: false
  remote_user: centos
  tags: lighthouse

  handlers:
    - name: Start Lighthouse service
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: false
        name: nginx.service
        state: restarted

  tasks:
    - name: Install, configure, and start Lighthouse
      block:
        - name: Pre-install epel-release
          become: true
          ansible.builtin.yum:
            name: epel-release

        - name: Pre-install Nginx & Git client
          become: true
          ansible.builtin.yum:
            name: "{{ lighthouse_packages }}"
            update_cache: true

        - name: Clone Lighthouse source code by Git
          become: true
          ansible.builtin.git:
            repo: "{{ lighthouse_code_src }}"
            version: "{{ lighthouse_code_src_version }}"
            dest: "{{ lighthouse_data_dir }}"

        - name: Prepare nginx config
          become: true
          ansible.builtin.template:
            src: "templates/nginx/lighthouse.conf.j2"
            dest: "/etc/nginx/conf.d/{{ lighthouse_nginx_conf }}"
            mode: "0644"
            owner: root
            group: root
          notify: Start Lighthouse service